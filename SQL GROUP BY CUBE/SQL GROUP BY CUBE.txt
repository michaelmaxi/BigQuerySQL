/* Consider the difference between GROUP BY & GROUP BY ROLLUP.  We already know that ROLLUP adds the subtotals and grand total values.  */
/* CUBE adds to this buy considering all the dimensions.  i.e. if the GROUP BY ROLLUP (make, model) then CUBE is ( ROLLUP (make,model) + ROLLUP(model,make) ) */
/* GROUP BY ROLLUP (n1, n2) where Totals & Grandtotals added are n+1 = make+model+1= 3 Totals added. */
/* GROUP BY CUBE (n1, n2) where Totals & Grandtotals added are n2 = 2 power 2 = 4 Totals added */

/* CUBE appears to be an Oracle Function which extends the GROUP BY ROLLUP */
/* Group by make + model = 2 */ 
SELECT
  make, model, sum(qty) as SalesQty
FROM 
  `aerial-tide-353016.VFACTS.Vehicles-Queensland` 
WHERE make in ('Audi', 'BMW')
GROUP BY make, model
ORDER BY make, model, SalesQty desc;
/* we have Audi = 13 Models / BMW = 19 Models Total 32 */

/* Group by ROLLUP */
SELECT
  make, model, sum(qty) as SalesQty, COUNT(DISTINCT make) as GroupingMake, COUNT(DISTINCT model) as GroupingModel
FROM 
  `aerial-tide-353016.VFACTS.Vehicles-Queensland` 
WHERE make in ('Audi', 'BMW')
GROUP BY ROLLUP (make, model)
ORDER BY make, model, SalesQty desc;
/* Group by Make&Model 32 Rows.  Add GROUP BY ROLLUP N+1 = 2 Make&Model+1 =3 There for 32 + 3 = 35 Rows with 3 Sub Total / Grand Totals */


WITH myCTE AS
(
  SELECT
    make, model, sum(qty) as SalesQty, COUNT(DISTINCT make) as GroupingMake, COUNT(DISTINCT model) as GroupingModel
  FROM 
    `aerial-tide-353016.VFACTS.Vehicles-Queensland` 
  WHERE make in ('Audi', 'BMW')
  GROUP BY ROLLUP (make, model)
  UNION DISTINCT
  SELECT
    make, model, sum(qty) as SalesQty, COUNT(DISTINCT make) as GroupingMake, COUNT(DISTINCT model) as GroupingModel
  FROM 
    `aerial-tide-353016.VFACTS.Vehicles-Queensland` 
  WHERE make in ('Audi', 'BMW')
  GROUP BY ROLLUP (model, make)
)
SELECT 
  *
FROM
  myCTE;
/* Result = 67 Rows */
/* Think of CUBE AS 1. ROLLUP (make, model) + 2. GROUP BY (model, make) */
